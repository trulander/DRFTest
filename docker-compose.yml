version: "3.8"


services:
  web:
    container_name: web
    build: ./DRFtest
    command: python3 manage.py runserver 0.0.0.0:8000
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    volumes:
      - ./DRFtest:/usr/src/app/
    ports:
      - 8000:8000
    depends_on:
      - redis
      - db

  celery:
    container_name: celery_worker
    build: ./DRFtest
    command: celery -A DRFtest worker -l INFO --pool=solo
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    volumes:
      - ./DRFtest:/usr/src/app/
    depends_on:
      - redis
      - web

  celery_beat:
    container_name: celery_beat
    build: ./DRFtest
    command: celery -A DRFtest beat -l INFO
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    volumes:
      - ./DRFtest:/usr/src/app/
    depends_on:
      - redis
      - web

  redis:
    image: redis
    container_name: redis
    volumes:
      - redis:/usr/local/etc/redis
      - redis-data:/data
    ports:
      - "6379:6379"

  db:
    image: postgres
    container_name: db_postgres
    restart: always
    volumes:
      - postgre_bd:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: dev
      POSTGRES_USER: dev
    ports:
      - "5432:5432"

  admined:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db

volumes:
  redis:
  redis-data:
  postgre_bd: