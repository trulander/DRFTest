# Generated by Django 3.2.7 on 2021-09-13 21:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accountinggrouptable',
            fields=[
                ('accountinggrouptableid', models.AutoField(db_column='accountingGroupTableID', primary_key=True, serialize=False)),
                ('accountgroupname', models.CharField(blank=True, db_column='accountGroupName', max_length=15, null=True)),
            ],
            options={
                'db_table': 'ACCOUNTINGGROUPTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accountstable',
            fields=[
                ('accountstableid', models.AutoField(db_column='accountsTableID', primary_key=True, serialize=False)),
                ('accountname', models.CharField(blank=True, db_column='accountName', max_length=63, null=True)),
                ('accounttypeid', models.IntegerField(blank=True, db_column='accountTypeID', null=True)),
                ('accounthidden', models.IntegerField(blank=True, db_column='accountHidden', null=True)),
                ('accountcurrency', models.CharField(blank=True, db_column='accountCurrency', max_length=5, null=True)),
                ('accountconversionrate', models.IntegerField(blank=True, db_column='accountConversionRate', null=True)),
                ('accountconversionratenew', models.FloatField(blank=True, db_column='accountConversionRateNew', null=True)),
                ('currencychanged', models.IntegerField(blank=True, db_column='currencyChanged', null=True)),
                ('creditlimit', models.IntegerField(blank=True, db_column='creditLimit', null=True)),
                ('cutoffda', models.IntegerField(blank=True, db_column='cutOffDa', null=True)),
                ('creditcardduedate', models.IntegerField(blank=True, db_column='creditCardDueDate', null=True)),
                ('cashbasedaccounts', models.IntegerField(blank=True, db_column='cashBasedAccounts', null=True)),
                ('accountselectorvisibility', models.IntegerField(blank=True, db_column='accountSelectorVisibility', null=True)),
                ('accountsextracolumnstring1', models.CharField(blank=True, db_column='accountsExtraColumnString1', max_length=255, null=True)),
                ('accountsextracolumnstring2', models.CharField(blank=True, db_column='accountsExtraColumnString2', max_length=255, null=True)),
                ('accountsextracolumnint1', models.CharField(blank=True, db_column='accountsExtraColumnInt1', max_length=255, null=True)),
                ('accountsextracolumnint2', models.CharField(blank=True, db_column='accountsExtraColumnInt2', max_length=255, null=True)),
            ],
            options={
                'db_table': 'ACCOUNTSTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Accounttypetable',
            fields=[
                ('accounttypetableid', models.AutoField(db_column='accountTypeTableID', primary_key=True, serialize=False)),
                ('accounttypename', models.CharField(blank=True, db_column='accountTypeName', max_length=255, null=True)),
                ('accountinggroupid', models.IntegerField(blank=True, db_column='accountingGroupID', null=True)),
            ],
            options={
                'db_table': 'ACCOUNTTYPETABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AndroidMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locale', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'android_metadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categorygrouptable',
            fields=[
                ('categorygrouptableid', models.AutoField(db_column='categoryGroupTableID', primary_key=True, serialize=False)),
                ('categorygroupname', models.CharField(blank=True, db_column='categoryGroupName', max_length=63, null=True)),
            ],
            options={
                'db_table': 'CATEGORYGROUPTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Childcategorytable',
            fields=[
                ('categorytableid', models.AutoField(db_column='categoryTableID', primary_key=True, serialize=False)),
                ('childcategoryname', models.CharField(blank=True, db_column='childCategoryName', max_length=63, null=True)),
                ('parentcategoryid', models.IntegerField(blank=True, db_column='parentCategoryID', null=True)),
                ('budgetamount', models.IntegerField(blank=True, db_column='budgetAmount', null=True)),
                ('budgetperiod', models.IntegerField(blank=True, db_column='budgetPeriod', null=True)),
                ('budgetenabledcategorychild', models.IntegerField(blank=True, db_column='budgetEnabledCategoryChild', null=True)),
                ('childcategoryicon', models.CharField(blank=True, db_column='childCategoryIcon', max_length=255, null=True)),
                ('categoryselectorvisibility', models.IntegerField(blank=True, db_column='categorySelectorVisibility', null=True)),
                ('budgetcustomsetup', models.CharField(blank=True, db_column='budgetCustomSetup', max_length=255, null=True)),
                ('categoryextracolumnstring1', models.CharField(blank=True, db_column='categoryExtraColumnString1', max_length=255, null=True)),
                ('categoryextracolumnstring2', models.CharField(blank=True, db_column='categoryExtraColumnString2', max_length=255, null=True)),
                ('categoryextracolumnint1', models.CharField(blank=True, db_column='categoryExtraColumnInt1', max_length=255, null=True)),
                ('categoryextracolumnint2', models.CharField(blank=True, db_column='categoryExtraColumnInt2', max_length=255, null=True)),
            ],
            options={
                'db_table': 'CHILDCATEGORYTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filterstable',
            fields=[
                ('filterstableid', models.AutoField(db_column='filtersTableID', primary_key=True, serialize=False)),
                ('filtername', models.CharField(blank=True, max_length=255, null=True)),
                ('filterjson', models.CharField(blank=True, db_column='filterJSON', max_length=255, null=True)),
            ],
            options={
                'db_table': 'FILTERSTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemtable',
            fields=[
                ('itemtableid', models.AutoField(db_column='itemTableID', primary_key=True, serialize=False)),
                ('itemname', models.CharField(blank=True, db_column='itemName', max_length=63, null=True)),
                ('itemautofillvisibility', models.IntegerField(blank=True, db_column='itemAutoFillVisibility', null=True)),
            ],
            options={
                'db_table': 'ITEMTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Labelstable',
            fields=[
                ('labelstableid', models.AutoField(db_column='labelsTableID', primary_key=True, serialize=False)),
                ('labelname', models.CharField(blank=True, db_column='labelName', max_length=63, null=True)),
                ('transactionidlabels', models.IntegerField(blank=True, db_column='transactionIDLabels', null=True)),
            ],
            options={
                'db_table': 'LABELSTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notificationtable',
            fields=[
                ('smstableid', models.AutoField(db_column='smsTableID', primary_key=True, serialize=False)),
                ('notificationpackagename', models.CharField(blank=True, db_column='notificationPackageName', max_length=255, null=True)),
                ('notificationappname', models.CharField(blank=True, db_column='notificationAppName', max_length=255, null=True)),
                ('notificationdefaultname', models.CharField(blank=True, db_column='notificationDefaultName', max_length=255, null=True)),
                ('notificationsendercategoryid', models.IntegerField(blank=True, db_column='notificationSenderCategoryID', null=True)),
                ('notificationsenderaccountid', models.IntegerField(blank=True, db_column='notificationSenderAccountID', null=True)),
                ('notificationsenderamountorder', models.IntegerField(blank=True, db_column='notificationSenderAmountOrder', null=True)),
            ],
            options={
                'db_table': 'NOTIFICATIONTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parentcategorytable',
            fields=[
                ('parentcategorytableid', models.AutoField(db_column='parentCategoryTableID', primary_key=True, serialize=False)),
                ('parentcategoryname', models.CharField(blank=True, db_column='parentCategoryName', max_length=63, null=True)),
                ('categorygroupid', models.IntegerField(blank=True, db_column='categoryGroupID', null=True)),
                ('budgetamountcategoryparent', models.IntegerField(blank=True, db_column='budgetAmountCategoryParent', null=True)),
                ('budgetperiodcategoryparent', models.IntegerField(blank=True, db_column='budgetPeriodCategoryParent', null=True)),
                ('budgetenabledcategoryparent', models.IntegerField(blank=True, db_column='budgetEnabledCategoryParent', null=True)),
                ('budgetamountoverride', models.IntegerField(blank=True, db_column='budgetAmountOverride', null=True)),
                ('budgetcustomsetupparent', models.CharField(blank=True, db_column='budgetCustomSetupParent', max_length=255, null=True)),
                ('categoryparentextracolumnstring1', models.CharField(blank=True, db_column='categoryParentextraColumnString1', max_length=255, null=True)),
                ('categoryparentextracolumnstring2', models.CharField(blank=True, db_column='categoryParentextraColumnString2', max_length=255, null=True)),
                ('categoryparentextracolumnint1', models.CharField(blank=True, db_column='categoryParentextraColumnInt1', max_length=255, null=True)),
                ('categoryparentextracolumnint2', models.CharField(blank=True, db_column='categoryParentextraColumnInt2', max_length=255, null=True)),
            ],
            options={
                'db_table': 'PARENTCATEGORYTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Picturetable',
            fields=[
                ('picturetableid', models.AutoField(db_column='pictureTableID', primary_key=True, serialize=False)),
                ('picturefilename', models.CharField(blank=True, db_column='pictureFileName', max_length=63, null=True)),
                ('transactionid', models.IntegerField(blank=True, db_column='transactionID', null=True)),
            ],
            options={
                'db_table': 'PICTURETABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Settingstable',
            fields=[
                ('settingstableid', models.AutoField(db_column='settingsTableID', primary_key=True, serialize=False)),
                ('defaultsettings', models.CharField(blank=True, db_column='defaultSettings', max_length=40, null=True)),
            ],
            options={
                'db_table': 'SETTINGSTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Smsstable',
            fields=[
                ('smstableid', models.AutoField(db_column='smsTableID', primary_key=True, serialize=False)),
                ('sendername', models.CharField(blank=True, db_column='senderName', max_length=63, null=True)),
                ('senderdefaultname', models.CharField(blank=True, db_column='senderDefaultName', max_length=63, null=True)),
                ('sendercategoryid', models.IntegerField(blank=True, db_column='senderCategoryID', null=True)),
                ('senderaccountid', models.IntegerField(blank=True, db_column='senderAccountID', null=True)),
                ('senderamountorder', models.IntegerField(blank=True, db_column='senderAmountOrder', null=True)),
            ],
            options={
                'db_table': 'SMSSTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trackingtable',
            fields=[
                ('trackingtableid', models.AutoField(db_column='trackingTableID', primary_key=True, serialize=False)),
                ('trackingname', models.CharField(blank=True, db_column='trackingName', max_length=63, null=True)),
            ],
            options={
                'db_table': 'TRACKINGTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transactionstable',
            fields=[
                ('transactionstableid', models.AutoField(db_column='transactionsTableID', primary_key=True, serialize=False)),
                ('itemid', models.IntegerField(blank=True, db_column='itemID', null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('transactioncurrency', models.CharField(blank=True, db_column='transactionCurrency', max_length=5, null=True)),
                ('conversionrate', models.IntegerField(blank=True, db_column='conversionRate', null=True)),
                ('conversionratenew', models.FloatField(blank=True, db_column='conversionRateNew', null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('transactiontypeid', models.IntegerField(blank=True, db_column='transactionTypeID', null=True)),
                ('categoryid', models.IntegerField(blank=True, db_column='categoryID', null=True)),
                ('accountid', models.IntegerField(blank=True, db_column='accountID', null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('accountreference', models.IntegerField(blank=True, db_column='accountReference', null=True)),
                ('accountpairid', models.IntegerField(blank=True, db_column='accountPairID', null=True)),
                ('uidpairid', models.IntegerField(blank=True, db_column='uidPairID', null=True)),
                ('deletedtransaction', models.IntegerField(blank=True, db_column='deletedTransaction', null=True)),
                ('newsplittransactionid', models.IntegerField(blank=True, db_column='newSplitTransactionID', null=True)),
                ('transfergroupid', models.IntegerField(blank=True, db_column='transferGroupID', null=True)),
                ('hasphoto', models.IntegerField(blank=True, db_column='hasPhoto', null=True)),
                ('labelcount', models.IntegerField(blank=True, db_column='labelCount', null=True)),
                ('remindertransaction', models.IntegerField(blank=True, db_column='reminderTransaction', null=True)),
                ('remindergroupid', models.IntegerField(blank=True, db_column='reminderGroupID', null=True)),
                ('reminderfrequency', models.IntegerField(blank=True, db_column='reminderFrequency', null=True)),
                ('reminderrepeatevery', models.IntegerField(blank=True, db_column='reminderRepeatEvery', null=True)),
                ('reminderendingtype', models.IntegerField(blank=True, db_column='reminderEndingType', null=True)),
                ('reminderstartdate', models.DateTimeField(blank=True, db_column='reminderStartDate', null=True)),
                ('reminderenddate', models.DateTimeField(blank=True, db_column='reminderEndDate', null=True)),
                ('reminderafternoofoccurences', models.IntegerField(blank=True, db_column='reminderAfterNoOfOccurences', null=True)),
                ('reminderautomaticlogtransaction', models.IntegerField(blank=True, db_column='reminderAutomaticLogTransaction', null=True)),
                ('reminderrepeating', models.IntegerField(blank=True, db_column='reminderRepeating', null=True)),
                ('reminderrepeatbydayofmonth', models.IntegerField(blank=True, db_column='reminderRepeatByDayOfMonth', null=True)),
                ('reminderexcludeweekend', models.IntegerField(blank=True, db_column='reminderExcludeWeekend', null=True)),
                ('reminderweekdaymovesetting', models.IntegerField(blank=True, db_column='reminderWeekDayMoveSetting', null=True)),
                ('reminderunbilled', models.IntegerField(blank=True, db_column='reminderUnbilled', null=True)),
                ('creditcardinstallment', models.IntegerField(blank=True, db_column='creditCardInstallment', null=True)),
                ('reminderversion', models.IntegerField(blank=True, db_column='reminderVersion', null=True)),
                ('dataextracolumnstring1', models.CharField(blank=True, db_column='dataExtraColumnString1', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRANSACTIONSTABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transactiontypetable',
            fields=[
                ('transactiontypetableid', models.AutoField(db_column='transactionTypeTableID', primary_key=True, serialize=False)),
                ('transactiontypename', models.CharField(blank=True, db_column='transactionTypeName', max_length=7, null=True)),
            ],
            options={
                'db_table': 'TRANSACTIONTYPETABLE',
                'managed': False,
            },
        ),
    ]
